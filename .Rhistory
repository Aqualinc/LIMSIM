as.yearmon("2007-03-01")
require(zoo)
as.yearmon("2007-03-01")
as.yearmon("2007-03-01")[1]
strplt(as.yearmon("2007-03-01"),sep=" ")
strsplt(as.yearmon("2007-03-01"),sep=" ")
strsplit(as.yearmon("2007-03-01"),sep=" ")
strsplit(as.yearmon("2007-03-01"),split=" ")
strsplit(as.character(as.yearmon("2007-03-01")),split=" ")
strsplit(as.character(as.yearmon("2007-03-01")),split=" ")[[1]][1]
###########################################################################################
#                                                                                         #
#        File to run analysis of change impacts                                           #
#                                                                                         #
###########################################################################################
rm(list=ls()) # clear memory
require(lattice)
require(latticeExtra)
require(randomForest)
##############################################################
#                   Define directories                       #
##############################################################
rootdir<-"G:/Common Data/R_Scripts/Beta Version"
setwd(rootdir); source("SetDirectories.r"); dir<-SetDirectories(rootdir)
dir$proj<-"G:/ARL Projects/Other/C12056_MSI - Water Wheel/Analysis/Modelling/AnalysiswithR/Datasets"
##############################################################
#                    Load functions                          #
##############################################################
source(paste(dir$fun,"GeneralFunctions.r",sep="/"))
source(paste(dir$fun,"map_REC7.r",sep="/"))
source(paste(dir$fun,"LIMSIM Functions.R",sep="/"))
source(paste(dir$fun,"Flow&AbstractionFunctions.R",sep="/"))
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
source(paste(dir$fun,"FindCatchment.R",sep="/"))
source(paste(dir$fun,"HabitatFunctions.R",sep="/"))
##############################################################
#            assemble data for a domain                      #
##############################################################
load(paste(dir$data,"RECdata_plus8.RData",sep="/"))
minord<-1             #Select minimum order to be included in the analysis
SelectSwitch<-1       #Select whethe to define by region (0) or a specified pt (1)
if (SelectSwitch==0){
# EITHER......................................................
# Choose region from:
# 1.  Northland               9.  Greater Wellington
# 2.  Auckland                10. Tasman
# 3.  Waikato                 11. Marlborough
# 4.  Bay of Plenty           12. West Coast
# 5.  East Cape               13. Canterbury
# 6.  Taranaki                14. Otag0
# 7.  Manawatu                15. Southland
# 8.  Hawke's Bay             16. ALL NZ
#And seclect a minimum stream order (from 1 to 8) (Recommend not having smaller than 4 for whole country)
##############################################################
pick <- MakePick(MyREC=MyREC,MinOrder=3,Region=16)
}else{
# OR.........................................................
# select by a downstream locaiton
Pt<-11018916  #This is the outlet
pick<-c(Pt,FindCatchment(Pt,MyREC,minord))}
##############################################################
MyREC<-MyREC[match(pick, MyREC$NZReach),]
#USER DEFINED SETTINGS FOR ALL SCENARIOS
TakeAll<-0                              #Define whether to take ALL alloaceted water (1) or just that for irrigable area (0)
IrrigableAreaTarget<-100                #Proportion of irrigable area we will aim to irrigate (0:100)
PropIrri<-1                             #Binary switch to indicate whether to scale land management factors by  proportion of upstream pasture that is irrigated
SysCap<-0.58                            #System capacity (l/s) default to 0.58 l/s (5 mm/d)
EffIrriArea<-0.8                        #Effective irrigable area - scale irrigable area to get actual irrigated area (0:100)
WQModel<-"McDowell"                        #Select which WaterQuality model to use Unwin or McDowell (default is Unwin)
QWModel<-"Booker"
RunOne=function(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,LandManagement="Fair",IrrigableAreaTarget=100,PropIrri=1,
TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,WQModel=WQModel,QWModel=QWModel){
MyREC1<-Run_FlowandAbstraction(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,TakeAll=TakeAll,SysCap=SysCap,
EffIrriArea=EffIrriArea)
MyREC1<-Run_WQandPeri(MyREC=MyREC1,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
AllocQ=AllocQ,PropIrri=PropIrri,WQModel=WQModel)
MyREC1<-Run_HabitatFunctions(MyREC=MyREC1,MinQ=MinQ,method=QWModel)
return(MyREC1)
}
REC_OUT<-list()
LandManagement<-c("Fair")               #Select a managemnet type of: "Good", "Fair" or "Poor"
i<-1
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
ManageScenarios<-expand.grid(AllocQ_sel,MinQ_sel)
MinQ_sel<-as.double(c(0.7,0.9))         #Define minimum flows (as a proportion of MALF)
AllocQ_sel<-as.double(c(0.5,1.0))
ManageScenarios<-expand.grid(AllocQ_sel,MinQ_sel)
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
source(paste(dir$fun,"HabitatFunctions.R",sep="/"))
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
load(paste(dir$fun,"BookerModel.RData",sep="/"))  # this loads Doug's fitted models to estimate width using catchment area and climate category
clear all
rm(list=ls()) # clear memory
rootdir<-"G:/Common Data/R_Scripts/Beta Version"
setwd(rootdir); source("SetDirectories.r"); dir<-SetDirectories(rootdir)
dir$proj<-"G:/ARL Projects/Other/C12056_MSI - Water Wheel/Analysis/Modelling/AnalysiswithR/Datasets"
##############################################################
rm
setwd(dir$fun)
load("BookerModel.RData")  # this loads Doug's fitted models to estimate width using catchment area and climate category
str(IntModelCl)
load(paste(dir$data,"RECdata_plus8.RData",sep="/"))
ThisNZReach = 13524724, method="booker", n.pairs = 10, Data=MyREC
ThisNZReach = 13524724 method="booker", n.pairs = 10, Data=MyREC
ThisNZReach = 13524724
method="booker"
n.pairs = 10
Data=MyREC
ThisRow <- which(Data$NZReach == ThisNZReach) # get the parameters from the FDC dataset is this faster???
this.seg <- Data[ThisRow, ]
Qbar <- Data[ThisRow, "MeanFlow"]  # OR take mean flow from Doug's estimates
this.seg$LogCatchmentArea <- log10(this.seg$usArea/1000000)
this.seg$LogFlow <- log10(Qbar)
d0<- predict(IntModelCl, newdata = this.seg)
d1 <- predict(SlopeModelCl, newdata = this.seg)
d2 <- predict(QuadModelCl, newdata = this.seg)
rm(list=ls()) # clear memory
require(lattice)
require(latticeExtra)
require(randomForest)
##############################################################
#                   Define directories                       #
##############################################################
rootdir<-"G:/Common Data/R_Scripts/Beta Version"
setwd(rootdir); source("SetDirectories.r"); dir<-SetDirectories(rootdir)
dir$proj<-"G:/ARL Projects/Other/C12056_MSI - Water Wheel/Analysis/Modelling/AnalysiswithR/Datasets"
load(paste(dir$fun,"BookerModel.RData",sep="/"))  # this loads Doug's fitted models to estimate width using catchment area and climate category
rm(list=ls()) # clear memory
require(lattice)
require(latticeExtra)
require(randomForest)
##############################################################
#                   Define directories                       #
##############################################################
rootdir<-"G:/Common Data/R_Scripts/Beta Version"
setwd(rootdir); source("SetDirectories.r"); dir<-SetDirectories(rootdir)
dir$proj<-"G:/ARL Projects/Other/C12056_MSI - Water Wheel/Analysis/Modelling/AnalysiswithR/Datasets"
##############################################################
#                    Load functions                          #
##############################################################
source(paste(dir$fun,"GeneralFunctions.r",sep="/"))
source(paste(dir$fun,"map_REC7.r",sep="/"))
source(paste(dir$fun,"LIMSIM Functions.R",sep="/"))
source(paste(dir$fun,"Flow&AbstractionFunctions.R",sep="/"))
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
source(paste(dir$fun,"FindCatchment.R",sep="/"))
source(paste(dir$fun,"HabitatFunctions.R",sep="/"))
##############################################################
load(paste(dir$data,"RECdata_plus8.RData",sep="/"))
##############################################################
#            select subset of data                           #
##############################################################
minord<-1             #Select minimum order to be included in the analysis
SelectSwitch<-1       #Select whethe to define by region (0) or a specified pt (1)
if (SelectSwitch==0){
# EITHER......................................................
# Choose region from:
# 1.  Northland               9.  Greater Wellington
# 2.  Auckland                10. Tasman
# 3.  Waikato                 11. Marlborough
# 4.  Bay of Plenty           12. West Coast
# 5.  East Cape               13. Canterbury
# 6.  Taranaki                14. Otag0
# 7.  Manawatu                15. Southland
# 8.  Hawke's Bay             16. ALL NZ
#And seclect a minimum stream order (from 1 to 8) (Recommend not having smaller than 4 for whole country)
##############################################################
pick <- MakePick(MyREC=MyREC,MinOrder=3,Region=16)
}else{
# OR.........................................................
# select by a downstream locaiton
Pt<-11018916  #This is the outlet
pick<-c(Pt,FindCatchment(Pt,MyREC,minord))}
##############################################################
MyREC<-MyREC[match(pick, MyREC$NZReach),]
##############################################################
#    Set Scenario Characteristics                            #
##############################################################
#_____________________________________________________________
#DEFINING ALLOCATION SCENARIOS
MinQ_sel<-as.double(c(0.7,0.9))         #Define minimum flows (as a proportion of MALF)
AllocQ_sel<-as.double(c(0.5,1.0))       #Define Allocation volumes (as a proportion of MALF)
#____________________________________________________________________________________________
#USER DEFINED SETTINGS FOR ALL SCENARIOS
TakeAll<-0                              #Define whether to take ALL alloaceted water (1) or just that for irrigable area (0)
IrrigableAreaTarget<-100                #Proportion of irrigable area we will aim to irrigate (0:100)
PropIrri<-1                             #Binary switch to indicate whether to scale land management factors by  proportion of upstream pasture that is irrigated
SysCap<-0.58                            #System capacity (l/s) default to 0.58 l/s (5 mm/d)
EffIrriArea<-0.8                        #Effective irrigable area - scale irrigable area to get actual irrigated area (0:100)
WQModel<-"McDowell"                        #Select which WaterQuality model to use Unwin or McDowell (default is Unwin)
QWModel<-"Booker"                       #Select which FlowWidth model to use: Jowett or Booker (default is Jowett)
###################
#Function to run "LIMSIM" for one scenario
RunOne=function(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,LandManagement="Fair",IrrigableAreaTarget=100,PropIrri=1,
TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,WQModel=WQModel,QWModel=QWModel){
MyREC1<-Run_FlowandAbstraction(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,TakeAll=TakeAll,SysCap=SysCap,
EffIrriArea=EffIrriArea)
MyREC1<-Run_WQandPeri(MyREC=MyREC1,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
AllocQ=AllocQ,PropIrri=PropIrri,WQModel=WQModel)
MyREC1<-Run_HabitatFunctions(MyREC=MyREC1,MinQ=MinQ,method=QWModel)
return(MyREC1)
}
ManageScenarios<-expand.grid(AllocQ_sel,MinQ_sel)
names(ManageScenarios)<-c("AllocQ","MinQ")
LandManagement<-c("Fair")               #Select a managemnet type of: "Good", "Fair" or "Poor"
REC_OUT<-list()
i<-1
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
load(paste(dir$fun,"BookerModel.RData",sep="/"))  # this loads Doug's fitted models to estimate width using catchment area and climate category
rm(list=ls()) # clear memory
require(lattice)
require(latticeExtra)
require(randomForest)
##############################################################
#                   Define directories                       #
##############################################################
rootdir<-"G:/Common Data/R_Scripts/Beta Version"
setwd(rootdir); source("SetDirectories.r"); dir<-SetDirectories(rootdir)
dir$proj<-"G:/ARL Projects/Other/C12056_MSI - Water Wheel/Analysis/Modelling/AnalysiswithR/Datasets"
##############################################################
#                    Load functions                          #
##############################################################
source(paste(dir$fun,"GeneralFunctions.r",sep="/"))
source(paste(dir$fun,"map_REC7.r",sep="/"))
source(paste(dir$fun,"LIMSIM Functions.R",sep="/"))
source(paste(dir$fun,"Flow&AbstractionFunctions.R",sep="/"))
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
source(paste(dir$fun,"FindCatchment.R",sep="/"))
source(paste(dir$fun,"HabitatFunctions.R",sep="/"))
##############################################################
#            assemble data for a domain                      #
##############################################################
load(paste(dir$data,"RECdata_plus8.RData",sep="/"))
##############################################################
#            select subset of data                           #
##############################################################
minord<-1             #Select minimum order to be included in the analysis
SelectSwitch<-1       #Select whethe to define by region (0) or a specified pt (1)
if (SelectSwitch==0){
# EITHER......................................................
# Choose region from:
# 1.  Northland               9.  Greater Wellington
# 2.  Auckland                10. Tasman
# 3.  Waikato                 11. Marlborough
# 4.  Bay of Plenty           12. West Coast
# 5.  East Cape               13. Canterbury
# 6.  Taranaki                14. Otag0
# 7.  Manawatu                15. Southland
# 8.  Hawke's Bay             16. ALL NZ
#And seclect a minimum stream order (from 1 to 8) (Recommend not having smaller than 4 for whole country)
##############################################################
pick <- MakePick(MyREC=MyREC,MinOrder=3,Region=16)
}else{
# OR.........................................................
# select by a downstream locaiton
Pt<-11018916  #This is the outlet
pick<-c(Pt,FindCatchment(Pt,MyREC,minord))}
##############################################################
MyREC<-MyREC[match(pick, MyREC$NZReach),]
##############################################################
#    Set Scenario Characteristics                            #
##############################################################
#_____________________________________________________________
#DEFINING ALLOCATION SCENARIOS
MinQ_sel<-as.double(c(0.7,0.9))         #Define minimum flows (as a proportion of MALF)
AllocQ_sel<-as.double(c(0.5,1.0))       #Define Allocation volumes (as a proportion of MALF)
#____________________________________________________________________________________________
#USER DEFINED SETTINGS FOR ALL SCENARIOS
TakeAll<-0                              #Define whether to take ALL alloaceted water (1) or just that for irrigable area (0)
IrrigableAreaTarget<-100                #Proportion of irrigable area we will aim to irrigate (0:100)
PropIrri<-1                             #Binary switch to indicate whether to scale land management factors by  proportion of upstream pasture that is irrigated
SysCap<-0.58                            #System capacity (l/s) default to 0.58 l/s (5 mm/d)
EffIrriArea<-0.8                        #Effective irrigable area - scale irrigable area to get actual irrigated area (0:100)
WQModel<-"McDowell"                        #Select which WaterQuality model to use Unwin or McDowell (default is Unwin)
QWModel<-"Booker"                       #Select which FlowWidth model to use: Jowett or Booker (default is Jowett)
#############################################################
#  POPULATE SCENARIOS
#Function to run "LIMSIM" for one scenario
RunOne=function(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,LandManagement="Fair",IrrigableAreaTarget=100,PropIrri=1,
TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,WQModel=WQModel,QWModel=QWModel){
MyREC1<-Run_FlowandAbstraction(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,TakeAll=TakeAll,SysCap=SysCap,
EffIrriArea=EffIrriArea)
MyREC1<-Run_WQandPeri(MyREC=MyREC1,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
AllocQ=AllocQ,PropIrri=PropIrri,WQModel=WQModel)
MyREC1<-Run_HabitatFunctions(MyREC=MyREC1,MinQ=MinQ,method=QWModel)
return(MyREC1)
}
ManageScenarios<-expand.grid(AllocQ_sel,MinQ_sel)
names(ManageScenarios)<-c("AllocQ","MinQ")
LandManagement<-c("Fair")               #Select a managemnet type of: "Good", "Fair" or "Poor"
REC_OUT<-list()
i<-1
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
###########################################################################################
#                                                                                         #
#        File to run analysis of change impacts                                           #
#                                                                                         #
###########################################################################################
rm(list=ls()) # clear memory
require(lattice)
require(latticeExtra)
require(randomForest)
##############################################################
#                   Define directories                       #
##############################################################
rootdir<-"G:/Common Data/R_Scripts/Beta Version"
setwd(rootdir); source("SetDirectories.r"); dir<-SetDirectories(rootdir)
dir$proj<-"G:/ARL Projects/Other/C12056_MSI - Water Wheel/Analysis/Modelling/AnalysiswithR/Datasets"
##############################################################
#                    Load functions                          #
##############################################################
source(paste(dir$fun,"GeneralFunctions.r",sep="/"))
source(paste(dir$fun,"map_REC7.r",sep="/"))
source(paste(dir$fun,"LIMSIM Functions.R",sep="/"))
source(paste(dir$fun,"Flow&AbstractionFunctions.R",sep="/"))
source(paste(dir$fun,"WaterQ&PeriphytonFunctions.R",sep="/"))
source(paste(dir$fun,"FindCatchment.R",sep="/"))
source(paste(dir$fun,"HabitatFunctions.R",sep="/"))
##############################################################
#            assemble data for a domain                      #
##############################################################
load(paste(dir$data,"RECdata_plus8.RData",sep="/"))
##############################################################
#            select subset of data                           #
##############################################################
minord<-1             #Select minimum order to be included in the analysis
SelectSwitch<-1       #Select whethe to define by region (0) or a specified pt (1)
if (SelectSwitch==0){
# EITHER......................................................
# Choose region from:
# 1.  Northland               9.  Greater Wellington
# 2.  Auckland                10. Tasman
# 3.  Waikato                 11. Marlborough
# 4.  Bay of Plenty           12. West Coast
# 5.  East Cape               13. Canterbury
# 6.  Taranaki                14. Otag0
# 7.  Manawatu                15. Southland
# 8.  Hawke's Bay             16. ALL NZ
#And seclect a minimum stream order (from 1 to 8) (Recommend not having smaller than 4 for whole country)
##############################################################
pick <- MakePick(MyREC=MyREC,MinOrder=3,Region=16)
}else{
# OR.........................................................
# select by a downstream locaiton
Pt<-11018916  #This is the outlet
pick<-c(Pt,FindCatchment(Pt,MyREC,minord))}
##############################################################
MyREC<-MyREC[match(pick, MyREC$NZReach),]
##############################################################
#    Set Scenario Characteristics                            #
##############################################################
#_____________________________________________________________
#DEFINING ALLOCATION SCENARIOS
MinQ_sel<-as.double(c(0.7,0.9))         #Define minimum flows (as a proportion of MALF)
AllocQ_sel<-as.double(c(0.5,1.0))       #Define Allocation volumes (as a proportion of MALF)
#____________________________________________________________________________________________
#USER DEFINED SETTINGS FOR ALL SCENARIOS
TakeAll<-0                              #Define whether to take ALL alloaceted water (1) or just that for irrigable area (0)
IrrigableAreaTarget<-100                #Proportion of irrigable area we will aim to irrigate (0:100)
PropIrri<-1                             #Binary switch to indicate whether to scale land management factors by  proportion of upstream pasture that is irrigated
SysCap<-0.58                            #System capacity (l/s) default to 0.58 l/s (5 mm/d)
EffIrriArea<-0.8                        #Effective irrigable area - scale irrigable area to get actual irrigated area (0:100)
WQModel<-"McDowell"                        #Select which WaterQuality model to use Unwin or McDowell (default is Unwin)
QWModel<-"Booker"                       #Select which FlowWidth model to use: Jowett or Booker (default is Jowett)
#############################################################
#  POPULATE SCENARIOS
#Function to run "LIMSIM" for one scenario
RunOne=function(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,LandManagement="Fair",IrrigableAreaTarget=100,PropIrri=1,
TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,WQModel=WQModel,QWModel=QWModel){
MyREC1<-Run_FlowandAbstraction(MyREC=MyREC,AllocQ=AllocQ,MinQ=MinQ,pick=pick,TakeAll=TakeAll,SysCap=SysCap,
EffIrriArea=EffIrriArea)
MyREC1<-Run_WQandPeri(MyREC=MyREC1,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
AllocQ=AllocQ,PropIrri=PropIrri,WQModel=WQModel)
MyREC1<-Run_HabitatFunctions(MyREC=MyREC1,MinQ=MinQ,method=QWModel)
return(MyREC1)
}
ManageScenarios<-expand.grid(AllocQ_sel,MinQ_sel)
names(ManageScenarios)<-c("AllocQ","MinQ")
LandManagement<-c("Fair")               #Select a managemnet type of: "Good", "Fair" or "Poor"
REC_OUT<-list()
#for (i in 1:length(ManageScenarios[,1])){
i<-1
print(paste("########## SCENARIO ",i," ############",sep=""))
REC_OUT[[i]]<-RunOne(MyREC=MyREC,AllocQ=ManageScenarios[i,1],MinQ=ManageScenarios[i,2],
pick=pick,LandManagement=LandManagement,IrrigableAreaTarget=IrrigableAreaTarget,
PropIrri=PropIrri,TakeAll=TakeAll,SysCap=SysCap,EffIrriArea=EffIrriArea,
WQModel=WQModel,QWModel=QWModel)
